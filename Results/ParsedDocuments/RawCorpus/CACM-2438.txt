a model and stack implementation of multiple environmentsmany control and access environment structuresrequire that storage for a procedure activation exist at times when control is not nested within theprocedure activated this is straightforward to implement by dynamic storage allocation with linkedblocks for each activation but rather expensive in both time and space this paper presents an implementationtechnique using a single stack to hold procedure activation storage which allows retentionof that storage for durations not necessarily tied to control flow the technique has the property that,in the simple case,it runs identically to the usual automatic stack allocation and deallocation procedure applications of this technique to multitasking coroutines backtracking label-valued variables andfunctional arguments are discussed in the initial model a single real processor is assumed and the implementationassumes multiple-processes coordinate by passing control explicitly to one another a multiprocessorimplementation requires only a few changes to the basic technique as described.cacm october 1973bobrow d g.wegbreit b.control structures environments stack allocation,dendrarchy retention dynamic storage allocation access environments funarg problem multitasking,coroutines backtracking label-valued variables functional arguments multiprocessor systems extensible control structures4.1 4.2 4.22 4.3 4.32 5.24ca731002 jb january 23 1978 8:27 am1972 4 24382156 4 24382168 4 24382438 4 24382438 4 24382723 4 24382736 4 24382833 4 24382855 4 24383074 4 24383112 4 24381826 5 24382314 5 24382438 5 24382438 5 24382438 5 24382625 5 24382922 5 24383081 5 24383101 5 24383112 5 2438106 6 24381380 6 24381471 6 24381753 6 24381826 6 24381972 6 24382138 6 24382193 6 24382358 6 24382438 6 24382438 6 24382438 6 24382438 6 24382438 6 24382723 6 24382736 6 24382833 6 24382838 6 24383185 6 2438731 6 2438