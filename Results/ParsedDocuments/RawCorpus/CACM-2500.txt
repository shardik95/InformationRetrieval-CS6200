a practical approach to managing resources and avoiding deadlocksresource scheduling and allocation can be expensivewith regard to time and space in multiprogramming or time-sharing environments involving large numbers oftasks and resources with conflicting requirements detection and/or prevention of deadlocks can requiremassive amounts of additional overhead if efficient usage of resources is to be maintained a resourcemanagement program is described which uses linked lists along with other techniques to overcome a largeportion of this overhead the program which is currently running as part of a large scale general purposeoperating system keeps resources relatively active but does not detect or prevent all deadlocksin its implemented state certain changes which would permit more comprehensive levels of deadlockprevention/detection at additional cost have not been incorporated in the running system dueto the infrequency of deadlock situations.cacm may 1973frailey d j.deadlock resource allocation scheduling resourcemanagement multiprogramming time-sharing multiprocessing deadly embrace4.30 4.32ca730520 jb january 23 1978 4:03 pm2280 4 25002379 4 25002482 4 25002500 4 25002228 5 25002500 5 25002500 5 25002500 5 2500