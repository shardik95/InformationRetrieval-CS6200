a general business-oriented language based on decision expressions*the structure of a digital compute programminglanguage which covers a wide class of business and file processing applications is presented sucha structure based on identifying and incorporating into a compiler the aspects common to all processesof such class permits writing extremely compact programs even for comparatively complex applications,in terms of tables of control expressions which express only information characteristic of the particularapplication furthermore,local changes of a process e.g changes affecting only one of the outputfiles involved can be effected by local modifications in the program e.g modification of only one entry of thetables this structure also allows for inexpensive preparation of loading-speed compilers which translate thesource programs into efficient machine codes the approach adopted here departs from conventional mechanicallanguage design philosophies it stresses the structural analysis of the class of processes to be representedin the languages as opposed to emphasizing formal i.e contents-independent syntactical definitions it relies exclusively on nonprocedural representation of process as sets tables of relationsbetween data and results there are no control statements such as go to etc instead of using proceduredescriptions which are one-to-one translations of flowcharts here an invariant pattern of procedureis identified as characteristic of the class of all batch file processes this new philosophy hasthe potential to overcome well-known deficiencies of other business-oriented languages and fully meetsthe requirements set by codasyl for such languages including machine-independence.cacm february 1964lombardi l a.ca640208 jb march 10 1978 4:08 am1135 4 11351136 4 1135493 4 11352710 4 11352765 4 11352888 4 11352906 4 1135729 4 11351135 5 11351135 5 11351135 5 11351959 5 1135616 5 11351135 6 1135