automatic generation of efficient lexicalprocessors using finite state techniquesthe practical application of the theory offinite-state automata to automatically generate lexical processors is dealt with in this tutorial articleby the use of the aed rword system developed at m as part of the aed-1 system this systemaccepts as input description of the multicharacter items or of words allowable in a language given in termsof a subset of regular expressions the output of the system is a lexical processor which reads a stringof characters and combines them into the items as defined by the regular expressions each outputitem is identified by a code number together with a pointer to a block of storage containing the charactersand character count in the item the processors produced by the system are based on finite-state machines each state of a machine corresponds to a unique condition in the lexical processing of a characterstring at each state a character is read and the machine changes to a new state at each transitionappropriate actions are taken based on the particular character read the system has been in operationsince 1966 and processors generated have compared favorably in speed to carefully hand-coded programsto accomplish the same task lexical processors for aed-o and mad are among the many which have beenproduced the techniques employed are independent of the nature of the items being evaluated if theword events is substituted for character string these processors may be described as generalized decision-makingmechanisms based upon an ordered sequence of events this allows the system to be used in arange of applications outside the area of lexical processing however convenient these advantages maybe speed is the most important consideration in designing a system for automatic generation of alexical processor the goal was a processor which completely eliminated backup or rereading which was nearlyas fast as hand-coded processors which would analyze the language and detect errors andwhich would be convenient and easy to use.cacm december 1968johnson w l.porter j h.ackley s i.ross d t.character string compiler finite-state automata finite-statemachine lexical processor nondeterministic machine parsing plex structure regular expressions,sequentialmachine syntactic analysis3.63 3.75 4.12 5.22 5.24 5.31ca681201 jb february 21 1978 2:19 pm1051 4 16651139 4 16651265 4 16651323 4 16651358 4 16651380 4 16651552 4 16651665 4 16651665 4 16651665 4 16651665 4 16651768 4 16651781 4 16651787 4 16651787 4 16651824 4 16651825 4 16651836 4 16651860 4 16651861 4 16651989 4 16652015 4 16652110 4 16652112 4 16652127 4 16652155 4 16652187 4 16652317 4 16652534 4 16652541 4 16652545 4 16652698 4 16652698 4 16652733 4 16652733 4 16652820 4 16653073 4 16653155 4 1665763 4 16651665 5 16651665 5 16651665 5 16651781 5 1665378 5 16652746 5 1665631 5 1665799 5 16651665 6 16651739 6 16652139 6 16652545 6 16652786 6 1665