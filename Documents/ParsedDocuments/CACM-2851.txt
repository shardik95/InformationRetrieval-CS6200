formal verification of parallel programstwo formal models for parallel computationare presented an abstract conceptual model and a parallel-program model the former model does notdistinguish between control and data states the latter model includes the capability for the representationof an infinite set of control states by allowing there to be arbitrarily many instruction pointers orprocesses executing the program an induction principle is presented which treats the control anddata state sets on the same ground through the use of place variables it is observed that certaincorrectness conditions can be expressed without enumeration of the set of all possible control states examples are presented in which the induction principle is used to demonstrate proofs of mutual exclusion it is shown that assertions-oriented proof methods are special cases of the induction principle.a special case of the assertions method which is called parallel place assertions is shown to beincomplete a formalization of deadlock is then presented the concept of a norm is introduced whichyields an extension to the deadlock problem of floyd's technique for proving termination also discussedis an extension of the program model which allows each process to have its own local variablesand permits shared global variables correctness of certain forms of implementation is also discussed an appendix is included which relates this work to previous work on the satisfiability of certain logical formulas.cacm july 1976keller r m.parallel program correctness verification,assertions deadlock mutual exclusion petrinet4.6 5.2 6.9 8.1ca760702 jb january 4 1978 1:20 pm2228 4 28512280 4 28512379 4 28512320 4 28512482 4 28512597 4 28512740 4 28512777 4 28512851 4 28512851 4 28512895 4 28512912 4 28512920 4 28512946 4 28513128 4 28511877 5 28512150 5 28512851 5 28512851 5 28512851 5 2851