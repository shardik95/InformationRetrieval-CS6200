can programming be liberated from the von neumannstyle a functional style and its algebra of programsconventional programming languages are growingever more enormous but not stronger inherent defects at the most basic level cause them to be bothfat and weak their primitive word-at-a-time style of programming inherited from their common ancestor-thevon neumann computer their close coupling off semantics to state transitions their division of programminginto a world of expressions and a world of statements their inability to effectively use powerfulcombining forms for building new programs from existing ones and their lack of useful mathematicalproperties for reasoning about programs an alternative functional style of programming is foundedon the use of combining forms for creating programs functional programs deal with structured data are oftennonrepetitive and nonrecursive are hierarchically constructed do not name their arguments and do not requirethe complex machinery of procedure declarations to become generally applicable combining forms canuse high level programs to build still higher levelones in a style not possible in conventional languages associated with the functional style of programming is an algebra of programs whose variables range overprograms and whose operations are combining forms this algebra can be used to transform programs andto solve equations whose unknowns are programs in much the same way one transforms equations in highschool algebra these transformations are given by algebraic laws and are carried out in the same languagein which programs are written combining forms are chosen not only for their programming powerbut also for the power of their associated algebraic laws general theorems of of the algebra give the detailedbehavior and termination conditions for large classes of programs a new class of computing systemsuses the functional programming style both in its programming language and in its state transitionrules unlike von neumann languages these systems have semantics loosely coupled to states-only onestate transition occurs per major computation cacm august 1978backus j.functional programming algebra of programs combiningforms functional forms programming languages von neumann computers von neumann languages models ofcomputing systems applicative computing systems applicative state transition systems program transformation,program correctness program termination metacomposition4.20 4.29 5.20 5.24 5.26ca780801 dh february 7 1979 3:13 pm1024 4 30771051 4 30771102 4 30771132 4 30771390 4 30771486 4 30771549 4 30771706 4 30771826 4 30771878 4 3077378 4 30772021 4 30772060 4 30772155 4 30772155 4 30772168 4 30772222 4 30772227 4 30772294 4 30772315 4 30772326 4 30772470 4 30772558 4 30772719 4 30772723 4 30772732 4 30772838 4 30772842 4 30772842 4 30772855 4 30772865 4 30772879 4 30772896 4 30772943 4 30772981 4 30773014 4 30773030 4 30773068 4 30773077 4 30773077 4 30773077 4 30773077 4 30773080 4 30773104 4 30773106 4 30773143 4 30773150 4 3077627 4 3077106 4 3077210 5 30771834 5 30772060 5 30772457 5 30773077 5 30773077 5 30773077 5 3077